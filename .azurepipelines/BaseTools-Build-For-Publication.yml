variables:
  linux_artifact_name: 'LinuxOutput'
  windows_artifact_name: 'WindowsOutput'
  temp_publication_directory: 'PackageStaging'

jobs:
  - job: linux_build
    displayName: Linux Build
    pool:
      vmImage: ubuntu-latest

    workspace:
      clean: all

    steps:
    - checkout: self
      clean: true
  
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7.x'
        architecture: 'x64'
      displayName: Install correct Python

    - script: pip install -r requirements.txt --upgrade
      displayName: 'Install/Upgrade pip modules'

    # Set default
    - bash: |
        echo "##vso[task.setvariable variable=pkg_count]${{ 1 }}"

    - task: CmdLine@1
      displayName: Update Environment
      inputs:
        filename: stuart_update
        arguments: -c .pytool/CISettings.py

    - template: templates/basetools-build-steps.yml
      parameters:
        tool_chain_tag: 'GCC5'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.Repository.LocalPath)/BaseTools/Source/C/bin'
        artifactName: $(linux_artifact_name)

  # - job: windows_build
  #   displayName: Windows Build
  #   pool:
  #     vmImage: windows-latest

  #   workspace:
  #     clean: all

  #   variables:
  #     build_invocable: $(Build.Repository.LocalPath)\BaseTools\Edk2ToolsBuild.py

  #   steps:
  #   - checkout: self
  #     clean: true
  
  #   - task: UsePythonVersion@0
  #     inputs:
  #       versionSpec: '3.7.x'
  #       addToPath: true
  #       architecture: 'x64'
  #     displayName: Install correct Python

  #   - script: pip install -r requirements.txt --upgrade
  #     displayName: 'Install/Upgrade pip modules'

  #   # Set default
  #   - bash: |
  #       echo "##vso[task.setvariable variable=pkg_count]${{ 1 }}"

  #   - task: CmdLine@1
  #     displayName: Update Environment
  #     inputs:
  #       filename: stuart_update
  #       arguments: -c .pytool/CISettings.py

  #   - template: templates/basetools-build-steps.yml
  #     parameters:
  #       tool_chain_tag: 'VS2019'

  #   - task: PublishBuildArtifacts@1
  #     inputs:
  #       pathtoPublish: '$(Build.Repository.LocalPath)\BaseTools\Bin\Win32'
  #       artifactName: $(windows_artifact_name)

  - job: assemble_package
    displayName: Assemble Release Package
    dependsOn:
    - linux_build
    # - windows_build
    pool:
      vmImage: windows-latest

    workspace:
      clean: all

    steps:
    - checkout: self
      clean: true
  
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7.x'
        addToPath: true
        architecture: 'x64'
      displayName: Install correct Python

    - script: pip install -r requirements.txt --upgrade
      displayName: 'Install/Upgrade pip modules'

    - script:
        mkdir $(Build.StagingDirectory)/$(temp_publication_directory)
        mv $(Build.ArifactStagingDirectory)/$(linux_artifact_name) $(Build.StagingDirectory)/$(temp_publication_directory)/Linux-x86
        mv $(Build.StagingDirectory)/$(windows_artifact_name) $(Build.StagingDirectory)/$(temp_publication_directory)/Windows-x86
      displayName: 'Info about stuff'
